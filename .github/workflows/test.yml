name: Test
on:
  push:
  pull_request:
jobs:
  test-build-args:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: github
        # todo: fix this path
        uses: pl-strflt/docker-container-action/.github/actions/github@main
      - id: debug
        run: |
          echo "GITHUB OUTPUT: $GITHUB_OUTPUT"
          echo "PWD: $PWD"
          echo `ls -la`
          cat tests/test-build-args.Dockerfile
      - name: build the container and run it
        id: run
        # todo: fix this path
        uses: pl-strflt/docker-container-action@main
        with:
          repository: ${{ steps.github.outputs.action_repository }}
          ref: ${{ steps.github.outputs.action_sha || steps.github.outputs.action_ref }}
          dockerfile: tests/test-build-args.Dockerfile
          args: --arg1 --arg2 --arg3
          build-args: |
            ARG_1:hello
            ARG_2:foo
            ARG_3:world
          opts: --volume ${GITHUB_OUPUT}:/output
      - name: check the output
        env:
          OUTPUTS: ${{ steps.run.outputs.outputs }}
          # ARG_1: ${{ steps.run.outputs.outputs.arg-1 }}
          # ARG_2: ${{ steps.run.outputs.outputs.arg-2 }}
          # ARG_3: ${{ steps.run.outputs.outputs.arg-3 }}
        run: |
          echo ${OUTPUTS}

          if [[ "$ARG_1" != "hello" ]]; then
            echo "ARG_1 is not hello"
            exit 1
          fi

          if [[ "$ARG_2" != "foo" ]]; then
            echo "ARG_2 is not foo"
            exit 1
          fi

          if [[ "$ARG_3" != "world" ]]; then
            echo "ARG_3 is not world"
            exit 1
          fi

          echo "all good"
